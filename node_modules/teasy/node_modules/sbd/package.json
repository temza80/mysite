{
  "name": "sbd",
  "version": "0.0.2",
  "description": "Split text into sentences",
  "main": "lib/tokenizer.js",
  "scripts": {
    "test": "mocha -R spec"
  },
  "homepage": "http://github.com/Tessmore/sbd",
  "repository": {
    "type": "git",
    "url": "https://github.com/Tessmore/sbd.git"
  },
  "keywords": [
    "sentence splitting",
    "splitting",
    "tokenize sentences",
    "sentences",
    "sentence"
  ],
  "author": {
    "name": "Fabiën Tesselaar"
  },
  "license": "MIT",
  "readmeFilename": "README.md",
  "devDependencies": {
    "mocha": "1.7.x"
  },
  "dependencies": {
    "sugar": "~1.4.1"
  },
  "readme": "# Sentence Boundary Detection (SBD)\n\nSimple sentence detection (i.e working ~95% of the time):\n\n* Split a text based on period, question- and exclamation marks.\n    * Skips abbreviations\n    * Skips numbers, currency\n    * Skips urls, email address, phone nr.\n\n## Future work\n\nCurrently, `sbd` fails to recognize sentences ending in an abbreviation, for example \"The president lives in Washington, D.C.\" and I do not really see a viable option other than using a real classifier with proper training.\n\n## Installation\n\nUse [npm](http://npmjs.org):\n\n    $ npm install sbd\n\n\n## How to\n\n```javascript\nvar tokenizer = require('sbd');\n\nvar text = \"In I.C.T we have multiple challenges!\nThis is a text of three sentences. Skip Mr. Money €10.00 right.\";\n\nvar sentences = tokenizer.sentences(text);\n\n// [\n//  'In I.C.T we have multiple challenges!',\n//  'This is a text of three sentences.',\n//  'Skip Mr. Money €10.00 right.'\n// ]\n```\n\n",
  "bugs": {
    "url": "https://github.com/Tessmore/sbd/issues"
  },
  "_id": "sbd@0.0.2",
  "dist": {
    "shasum": "539687363f5c2a703f21ca1ea303e79029bad38b"
  },
  "_from": "sbd@0.0.2",
  "_resolved": "https://registry.npmjs.org/sbd/-/sbd-0.0.2.tgz"
}
